{"version":3,"file":"static/js/209.5b7ffc42.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","page/Movies.jsx","servoces/Api.jsx"],"sourcesContent":["export function Error (){\n    return(\n        <p>Sorry, something went wrong!</p>\n    )\n}","import { ThreeCircles } from  'react-loader-spinner'\nexport function Loader(){\n    return(\n<ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"\"\n  innerCircleColor=\"\"\n  middleCircleColor=\"\"\n/>\n    )\n}","import styled from '@emotion/styled'\nimport { Link} from 'react-router-dom';\n\nexport const List = styled.ul`\nmargin:0;\npadding: 0;\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr); \ngap: 32px; \nlist-style-type: none;\n`\n\nexport const Item = styled.li`\nwidth: 200px;\nheight: 340px;\nbackground-color: #032730;\ntext-decoration: none;\n\n`\n\n\nexport const ItemTitle = styled.p`\ndisplay: inline-block;\nmargin: 0;\ncolor: #9ae9fc;\n`\n\nexport const StyledLink = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n","\nimport {Placeholder} from 'components/Placeholder/Placeholder';\nimport { List, Item , ItemTitle, StyledLink} from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({movies}) => {\n   const location = useLocation()\n    return(\n        <List>\n         {movies && movies.map((movie) => (<Item key={movie.id}><StyledLink to={`/movies/${movie.id}`} state={{from: location}}>\n           {movie.poster_path!== null ? <img height='300px' width='200px' src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt=\"poster\" /> : <Placeholder/>}\n            <ItemTitle>{movie.title}</ItemTitle>\n            </StyledLink></Item>))}\n        </List>\n    )\n}","import styled from \"@emotion/styled\"\n\nexport const Wrapper = styled.div`\nwidth:200px;\nheight: 340px;\nbackground-color: grey;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: black;\n`\n\nexport const CastWrapper = styled.div`\nwidth:160px;\nheight: 240px;\nbackground-color: grey;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: black;\n`","import { Wrapper, CastWrapper } from \"./Placeholder.styled\";\n\nexport const Placeholder = () => {\n\n      \n    return (\n\n        <Wrapper>Poster will be added soon...</Wrapper>\n    )\n\n}\n\nexport const PlaceholderCast = () => {\n\n      \n    return (\n\n        <CastWrapper>Photo will be added soon...</CastWrapper>\n    )\n\n}\n","import styled from '@emotion/styled'\n\nexport const StyledForm = styled.form`\nwidth: 294px;\nmargin: 0 auto;\n\n`\n\n\nexport const Input = styled.input`\nwidth: 220px;\nheight: 22px;\n`\n\nexport const Button = styled.button`\npadding: 6px 6px;\nfont-size: 14px;\nbackground-color: #9ae9fc;\ncolor:#032730;\nborder: none;\n\n&:hover{\nbackground-color: #032730;\ncolor:#9ae9fc;\n}\n`","import { useState } from \"react\"\nimport { StyledForm, Input, Button } from \"./Form.styled\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport function Form({setSearchParams}){\n   const [query, setQuery] = useState('')\n\n   const handleChange=(e)=>{\n    setQuery(e.target.value)\n   }\n\n   const handleSubmit = (e)=>{\n    e.preventDefault()\n    if(query.trim() === ''){\n        Notify.warning('Please, write the request!')\n    }\n\n    setSearchParams({query})\n    \n   }\n\n    return(\n        <StyledForm onSubmit={handleSubmit}>\n        <label>\n            <Input value={query} name=\"query\" type=\"text\" onChange={handleChange}/>\n        </label>\n        <Button type=\"submit\">Search</Button>\n        </StyledForm>\n    )\n}","import { Form } from \"components/Form/Form\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getMoviesByquery } from \"servoces/Api\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport default function Movies(){\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(false)\n    const [loader, setLoader] = useState(false)\n    const [searchParams, setSearchParams] = useSearchParams()\n\n    \n    useEffect(()=>{\n        const query = searchParams.get('query')\n        setMovies([])\n        if(query){\n         const fetchMovie= async ()=>{\n            try{    \n            setLoader(true)\n            const fetchedData = await getMoviesByquery(query)\n            setMovies(fetchedData)\n            setLoader(false)\n            }catch(error){\n                setError(true)\n                Notify.failure(error.message);\n            }finally{\n                setLoader(false)\n            }\n         }\n        fetchMovie()}\n    }, [searchParams])\n\n    return(\n        <>\n    <Form setSearchParams={setSearchParams}/>\n    {loader && <Loader/>}\n    {movies.length > 0 && movies.length > 0 && <MoviesList movies={movies} />}\n    {error && <Error/>}\n    </>\n    )\n}","import axios from 'axios';\nimport {Notify} from 'notiflix';\n\nconst KEY = '7767ff949005c6c2b1276d0401107c06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingMovie() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getMoviesByquery(query) {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    const englishMovies = data.results.filter(\n      movie => movie.original_language === 'en'\n    );\n    return englishMovies;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getReviewById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n"],"names":["Error","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","styled","Item","ItemTitle","StyledLink","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","Placeholder","title","Wrapper","CastWrapper","PlaceholderCast","StyledForm","Input","Button","Form","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","trim","Notify","value","name","type","onChange","target","Movies","setMovies","error","setError","loader","setLoader","useSearchParams","searchParams","useEffect","get","fetchMovie","getMoviesByquery","fetchedData","message","length","KEY","getTrandingMovie","axios","data","results","englishMovies","filter","original_language","getMovieById","getCastById","getReviewById"],"sourceRoot":""}