{"version":3,"file":"static/js/401.58c5fd31.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieDetailsComp.styled.jsx","components/MovieDetails/MovieDetailsComp.jsx","page/MovieDetails.styled.jsx","page/MovieDetails.jsx","servoces/Api.jsx"],"sourcesContent":["export function Error (){\n    return(\n        <p>Sorry, something went wrong!</p>\n    )\n}","import { ThreeCircles } from  'react-loader-spinner'\nexport function Loader(){\n    return(\n<ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"\"\n  innerCircleColor=\"\"\n  middleCircleColor=\"\"\n/>\n    )\n}","import styled from '@emotion/styled'\n\nexport const ContentBox = styled.div`\npadding: 24px 0;\ncolor: white;\ndisplay: flex;\ngap: 32px\n`","import {ContentBox} from './MovieDetailsComp.styled'\nexport function MovieDetailsComp({\n  title,\n  vote_average,\n  overview,\n  genreNames,\n  posterPath,\n}) {\n  return (\n    <ContentBox>\n      <div>\n      <img src={`https://image.tmdb.org/t/p/w300${posterPath}`} alt={title} /></div>\n      <div><h1>{title}</h1>\n      <p>User score: {vote_average}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genreNames}</p></div>\n    </ContentBox>\n  );\n}\n","import styled from '@emotion/styled'\nimport { Link} from 'react-router-dom';\n\nexport const BackButton = styled(Link)`\npadding: 6px 6px;\nfont-size: 14px;\nbackground-color: #9ae9fc;\ncolor:#032730;\nborder: none;\ntext-decoration: none;\n\n&:hover{\nbackground-color: #032730;\ncolor:#9ae9fc;\n}\n`\n\nexport const AddInfo = styled(Link)`\nmargin-right: 24px;\nfont-weight: 600;\ncolor: white;\ntext-decoration: none;\n\n&:hover{\n    color:#04596e\n}\n\n&.active{\n    color:#04596e\n}\n`","import { useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieById } from 'servoces/Api';\nimport { MovieDetailsComp } from 'components/MovieDetails/MovieDetailsComp';\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\nimport {BackButton, AddInfo} from './MovieDetails.styled'\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? './');\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setLoader(true);\n        const data = await getMovieById(movieId);\n        setMovie(data);\n        setLoader(false);\n      } catch (error) {\n        setError(true);\n        Notify.failure(error.message);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchMovies();\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  const posterPath = poster_path ? poster_path : '';\n  const genreNames = genres ? genres.map(genre => genre.name).join(' ') : '';\n  return (\n    <>  \n      <BackButton to={backLink.current}>Go back</BackButton>\n      {loader && <Loader/>}\n      {error && <Error/>}\n      <MovieDetailsComp\n        title={title}\n        vote_average={vote_average}\n        overview={overview}\n        genreNames={genreNames}\n        posterPath={posterPath}\n      />\n      \n      <h2>Additional Information</h2>\n      <AddInfo to=\"cast\">Cast</AddInfo>\n      <AddInfo to=\"review\">Review</AddInfo>\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '7767ff949005c6c2b1276d0401107c06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingMovie() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByquery(query) {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    const englishMovies = data.results.filter(\n      movie => movie.original_language === 'en'\n    );\n    return englishMovies;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getReviewById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n"],"names":["Error","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ContentBox","styled","MovieDetailsComp","title","vote_average","overview","genreNames","posterPath","src","alt","BackButton","Link","AddInfo","MovieDetails","movieId","useParams","useState","movie","setMovie","error","setError","loader","setLoader","location","useLocation","backLink","useRef","state","from","useEffect","getMovieById","data","Notify","message","fetchMovies","genres","poster_path","map","genre","name","join","to","current","KEY","getTrandingMovie","axios","results","console","log","getMoviesByquery","query","englishMovies","filter","original_language","id","getCastById","getReviewById"],"sourceRoot":""}