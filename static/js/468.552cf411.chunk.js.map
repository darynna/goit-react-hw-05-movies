{"version":3,"file":"static/js/468.552cf411.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","page/Home.jsx","servoces/Api.jsx"],"sourcesContent":["export function Error (){\n    return(\n        <p>Sorry, something went wrong!</p>\n    )\n}","import { ThreeCircles } from  'react-loader-spinner'\nexport function Loader(){\n    return(\n<ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"\"\n  innerCircleColor=\"\"\n  middleCircleColor=\"\"\n/>\n    )\n}","import styled from '@emotion/styled'\nimport { Link} from 'react-router-dom';\n\nexport const List = styled.ul`\nmargin:0;\npadding: 0;\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr); \ngap: 32px; \nlist-style-type: none;\n`\n\nexport const Item = styled.li`\nwidth: 200px;\nheight: 340px;\nbackground-color: #032730;\ntext-decoration: none;\n\n`\n\n\nexport const ItemTitle = styled.p`\ndisplay: inline-block;\nmargin: 0;\ncolor: #9ae9fc;\n`\n\nexport const StyledLink = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n","\nimport {Placeholder} from 'components/Placeholder/Placeholder';\nimport { List, Item , ItemTitle, StyledLink} from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({movies}) => {\n   const location = useLocation()\n    return(\n        <List>\n         {movies && movies.map((movie) => (<Item key={movie.id}><StyledLink to={`/movies/${movie.id}`} state={{from: location}}>\n           {movie.poster_path!== null ? <img height='300px' width='200px' src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt=\"poster\" /> : <Placeholder/>}\n            <ItemTitle>{movie.title}</ItemTitle>\n            </StyledLink></Item>))}\n        </List>\n    )\n}","import styled from \"@emotion/styled\"\n\nexport const Wrapper = styled.div`\nwidth:200px;\nheight: 340px;\nbackground-color: grey;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: #000000;\n`\n\nexport const CastWrapper = styled.div`\nwidth:160px;\nheight: 240px;\nbackground-color: grey;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: #000000;\n`","import { Wrapper, CastWrapper } from \"./Placeholder.styled\";\n\nexport const Placeholder = () => {\n\n      \n    return (\n\n        <Wrapper>Poster will be added soon...</Wrapper>\n    )\n\n}\n\nexport const PlaceholderCast = () => {\n\n      \n    return (\n\n        <CastWrapper>Photo will be added soon...</CastWrapper>\n    )\n\n}\n","import { useEffect, useState } from \"react\"\nimport { getTrandingMovie } from \"servoces/Api\"\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport default function Home(){\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(false)\n    const [loader, setLoader] = useState(false)\n\n    useEffect(()=>{\n       async function fetchMovies(){\n        try{\n            setLoader(true)\n            const data = await getTrandingMovie()\n            setMovies(data)\n            setLoader(false)\n        }catch(error){\n            setError(true)\n            Notify.failure(error.message);\n        }finally{\n            setLoader(false)\n        }\n    }\n        fetchMovies()\n        \n       \n    }, [])\n    return(\n        <>\n        <h1>Trending today:</h1>\n        <MoviesList movies={movies}/>\n        {loader && <Loader/>}\n        {error && <Error/>}\n        </>\n    )\n}","import axios from 'axios';\nimport {Notify} from 'notiflix';\n\nconst KEY = '7767ff949005c6c2b1276d0401107c06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingMovie() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getMoviesByquery(query) {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    const englishMovies = data.results.filter(\n      movie => movie.original_language === 'en'\n    );\n    return englishMovies;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n\nexport async function getReviewById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return data;\n  } catch (error) {\n    return Notify.failure(\n      `${error.message}, please try again later`\n    );\n  }\n}\n"],"names":["Error","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","styled","Item","ItemTitle","StyledLink","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","Placeholder","title","Wrapper","CastWrapper","PlaceholderCast","Home","useState","setMovies","error","setError","loader","setLoader","useEffect","getTrandingMovie","data","Notify","message","fetchMovies","KEY","axios","results","getMoviesByquery","query","englishMovies","filter","original_language","getMovieById","getCastById","getReviewById"],"sourceRoot":""}