{"version":3,"file":"static/js/468.57f1b1c6.chunk.js","mappings":"oLAAO,SAASA,IACZ,OACI,uBAAG,gCAEV,C,6ECHM,SAASC,IACZ,OACJ,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,IAGnB,C,gGCbYC,EAAOC,EAAAA,EAAAA,GAAH,8IASJC,EAAOD,EAAAA,EAAAA,GAAH,6GASJE,EAAYF,EAAAA,EAAAA,EAAH,6EAMTG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,uF,SCxBVK,EAAa,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAChC,OACI,SAACR,EAAD,UACEO,GAAUA,EAAOE,KAAI,SAACC,GAAD,OAAY,SAACR,EAAD,WAAqB,UAACE,EAAD,CAAYO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMN,GAArD,WACpD,gBAAKlB,OAAO,QAAQC,MAAM,QAAQwB,IAAG,yCAAoCL,EAAMM,aAAeC,IAAI,MAClG,SAACd,EAAD,UAAYO,EAAMQ,YAFwBR,EAAME,GAA7B,KAM9B,C,6LCJc,SAASO,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACMjB,GAAWkB,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WAAI,wCACX,oGAEKF,GAAU,GAFf,UAGwBG,EAAAA,EAAAA,MAHxB,OAGWC,EAHX,OAIKC,QAAQC,IAAIF,GACZR,EAAUQ,GACVJ,GAAU,GANf,kDAQKF,GAAS,GACTS,EAAAA,OAAAA,QAAe,KAAMC,SAT1B,yBAWKR,GAAU,GAXf,8EADW,uBAAC,WAAD,wBAeVS,EAGH,GAAE,IACHJ,QAAQC,IAAIxB,IAER,iCACA,wBAAI,qBACJ,SAAC,IAAD,CAAYA,OAAQA,EAAQC,SAAUA,IACrCgB,IAAU,SAAC,IAAD,IACVF,IAAS,SAAC,IAAD,MAGjB,C","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","page/Home.jsx"],"sourcesContent":["export function Error (){\n    return(\n        <p>Sorry, something went wrong!</p>\n    )\n}","import { ThreeCircles } from  'react-loader-spinner'\nexport function Loader(){\n    return(\n<ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"\"\n  innerCircleColor=\"\"\n  middleCircleColor=\"\"\n/>\n    )\n}","import styled from '@emotion/styled'\nimport { Link} from 'react-router-dom';\n\nexport const List = styled.ul`\nmargin:0;\npadding: 0;\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr); \ngap: 32px; \nlist-style-type: none;\n`\n\nexport const Item = styled.li`\nwidth: 200px;\nheight: 340px;\nbackground-color: #032730;\ntext-decoration: none;\n\n`\n\n\nexport const ItemTitle = styled.p`\ndisplay: inline-block;\nmargin: 0;\ncolor: #9ae9fc;\n`\n\nexport const StyledLink = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n","\nimport { List, Item , ItemTitle, StyledLink} from './MoviesList.styled';\n\nexport const MoviesList = ({movies, location}) => {\n    return(\n        <List>\n         {movies && movies.map((movie) => (<Item key={movie.id}><StyledLink to={`/movies/${movie.id}`} state={{from: location}}>\n            <img height='300px' width='200px' src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt=\"\" />\n            <ItemTitle>{movie.title}</ItemTitle>\n            </StyledLink></Item>))}\n        </List>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { getTrandingMovie } from \"servoces/Api\"\nimport { MoviesList } from \"components/MoviesList/MoviesList\"\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function Home(){\n    const [movies, setMovies] = useState([])\n    const [error, setError] = useState(false)\n    const [loader, setLoader] = useState(false)\n    const location = useLocation()\n\n    useEffect(()=>{\n       async function fetchMovies(){\n        try{\n            setLoader(true)\n            const data = await getTrandingMovie()\n            console.log(data)\n            setMovies(data)\n            setLoader(false)\n        }catch(error){\n            setError(true)\n            Notify.failure(error.message);\n        }finally{\n            setLoader(false)\n        }\n    }\n        fetchMovies()\n        \n       \n    }, [])\n    console.log(movies)\n    return(\n        <>\n        <h1>Trending today:</h1>\n        <MoviesList movies={movies} location={location}/>\n        {loader && <Loader/>}\n        {error && <Error/>}\n        </>\n    )\n}"],"names":["Error","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","List","styled","Item","ItemTitle","StyledLink","Link","MoviesList","movies","location","map","movie","to","id","state","from","src","poster_path","alt","title","Home","useState","setMovies","error","setError","loader","setLoader","useLocation","useEffect","getTrandingMovie","data","console","log","Notify","message","fetchMovies"],"sourceRoot":""}