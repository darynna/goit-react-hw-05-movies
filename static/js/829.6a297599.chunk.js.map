{"version":3,"file":"static/js/829.6a297599.chunk.js","mappings":"oLAAO,SAASA,IACZ,OACI,uBAAG,gCAEV,C,6ECHM,SAASC,IACZ,OACJ,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,IAGnB,C,qLCdYC,E,QAAUC,EAAAA,GAAH,gD,SCML,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEID,GAAU,GAFd,UAG8BE,EAAAA,EAAAA,IAAcV,GAH5C,gBAGYW,EAHZ,EAGYA,QACRP,EAAWO,GACXH,GAAU,GALd,kDAOIF,GAAS,GACTM,EAAAA,OAAAA,QAAe,KAAMC,SARzB,yBAUIL,GAAU,GAVd,8EADc,uBAAC,WAAD,wBAcdM,EACD,GAAE,CAACd,KAEF,gCACGG,EAAQY,OAAS,GAChB,SAAClB,EAAD,UACGM,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,yBAAK,8BAENb,IAAU,SAACrB,EAAA,EAAD,IACVmB,IAAS,SAACpB,EAAA,EAAD,MAGf,C,mMC9CKoC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAF5D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,EAAKb,SAHT,gCAKHc,QAAQC,IAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,oGAEoBL,EAAAA,EAAAA,IAAA,+BACGF,EADH,kBACgBO,EADhB,oBAFpB,uBAEKJ,EAFL,EAEKA,KAGFK,EAAgBL,EAAKb,QAAQmB,QACjC,SAAAC,GAAK,MAAgC,OAA5BA,EAAMC,iBAAV,IANJ,kBAQIH,GARJ,gCAUHJ,QAAQC,IAAR,MAVG,gFAcA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4Bb,GAA5B,kGAEoBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCC,IAFrD,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA2Bd,GAA3B,kGAEoBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCC,IAF7D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BU,GAA7B,kGAEoBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCC,IAF7D,uBAEKG,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,QAAQC,IAAR,MALG,gFA3CPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Error/Error.jsx","components/Loader/Loader.jsx","components/Review/Review.styled.jsx","components/Review/Review.jsx","servoces/Api.jsx"],"sourcesContent":["export function Error (){\n    return(\n        <p>Sorry, something went wrong!</p>\n    )\n}","import { ThreeCircles } from  'react-loader-spinner'\nexport function Loader(){\n    return(\n<ThreeCircles\n  height=\"100\"\n  width=\"100\"\n  color=\"#4fa94d\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n  ariaLabel=\"three-circles-rotating\"\n  outerCircleColor=\"\"\n  innerCircleColor=\"\"\n  middleCircleColor=\"\"\n/>\n    )\n}","import styled from '@emotion/styled'\n\nexport const Reviews = styled.ul`\nlist-style-type: none;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewById } from 'servoces/Api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport {Reviews} from './Review.styled'\n\nexport default function Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        setLoader(true);\n        const { results } = await getReviewById(movieId);\n        setReviews(results);\n        setLoader(false);\n      } catch (error) {\n        setError(true);\n        Notify.failure(error.message);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchMovies();\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Reviews>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </Reviews>\n      ) : (\n        <div>Sorry, there is no review</div>\n      )}\n      {loader && <Loader />}\n      {error && <Error />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '7767ff949005c6c2b1276d0401107c06';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingMovie() {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${KEY}`);\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByquery(query) {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&language=en-US`\n    );\n    const englishMovies = data.results.filter(\n      movie => movie.original_language === 'en'\n    );\n    return englishMovies;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/credits?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function getReviewById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}/reviews?api_key=${KEY}`);\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n}\n"],"names":["Error","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Reviews","styled","Review","movieId","useParams","useState","reviews","setReviews","error","setError","loader","setLoader","useEffect","getReviewById","results","Notify","message","fetchMovies","length","map","review","author","content","id","KEY","getTrandingMovie","axios","data","console","log","getMoviesByquery","query","englishMovies","filter","movie","original_language","getMovieById","getCastById"],"sourceRoot":""}